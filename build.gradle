plugins {
  // id "com.jfrog.bintray" version "1.8.5"
  id 'java'
  id 'checkstyle'
  id 'com.github.spotbugs' version '6.1.13'
  id 'org.sonarqube' version '6.2.0.5505'
  id 'maven-publish'
  id 'org.embulk.embulk-plugins' version '0.7.0'
  id 'org.jreleaser' version '1.18.0'
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(8)
  }
  withJavadocJar()
  withSourcesJar()
}

group = 'io.github.yuokada'
version = '0.7.0'
description = 'Embulk plugin for generate dummy records by Java.'

repositories {
  mavenCentral()
  maven { url 'https://nexus.web.cern.ch/nexus/content/repositories/public/' }
}

def JUNIT_VERSION = "5.13.1"

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

dependencies {
  compileOnly("org.embulk:embulk-core:0.11.5") {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
    exclude group: 'org.apache.commons', module: 'commons-lang3'
  }
  compileOnly("org.embulk:embulk-util-json:0.5.0")

  implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
  implementation 'org.apache.commons:commons-text:1.13.1'
  implementation 'com.google.guava:guava:33.4.8-jre'
  implementation 'org.msgpack:msgpack-core:0.9.+'

  testImplementation "org.junit.jupiter:junit-jupiter-api:$JUNIT_VERSION"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$JUNIT_VERSION"
}

embulkPlugin {
  mainClass = "io.github.yuokada.embulk.input.randomj.RandomjInputPlugin"
  category = "input"
  type = "randomj"
}

checkstyle {
  configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
  toolVersion = '6.19'
}
checkstyleMain {
  configFile = file("${project.rootDir}/config/checkstyle/default.xml")
  ignoreFailures = false
}
checkstyleTest {
  configFile = file("${project.rootDir}/config/checkstyle/default.xml")
  ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
  classpath = sourceSets.main.output + sourceSets.test.output
  source = sourceSets.main.allJava + sourceSets.test.allJava
}

spotbugs {
  ignoreFailures = true
  excludeFilter = file("spotbugs-exclude.xml")
}

// --- JReleaser Start ---
publishing {
    publications {
        embulkPluginMaven(MavenPublication) {
            from components.java
            groupId = project.group
            artifactId = 'embulk-input-randomj'
            version = project.version
        }
    }
}
// --- End JReleaser ---

gem {
  from("LICENSE.txt")
  authors = ["yuokada"]
  email = ["ykhrokada+rubygems@gmail.com"]
  summary = "Randomj input plugin for Embulk"
  homepage = "https://github.com/yuokada/embulk-input-randomj"
  licenses = ["MIT"]
  // metadata = [  // Optional -- if you need metadata in the gem.
  //     "foo": "bar"
  // ]
}

gemPush {
  host = "https://rubygems.org"
}
