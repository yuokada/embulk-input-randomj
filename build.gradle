buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://nexus.web.cern.ch/nexus/content/repositories/public/' }
  }
}

plugins {
  id "com.jfrog.bintray" version "1.8.5"
  id "java"
  id "checkstyle"
  id "com.github.spotbugs" version "6.1.6"
  id "org.sonarqube" version "4.4.1.3373"

  id "maven-publish"
  id "org.embulk.embulk-plugins" version "0.7.0"
}

repositories {
  mavenCentral()
  maven { url 'https://nexus.web.cern.ch/nexus/content/repositories/public/' }
}

group = "io.github.yuokada"
version = "0.7.0"
description = "Embulk plugin for generate dummy records by Java."

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
  options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
}

dependencies {
  compileOnly("org.embulk:embulk-core:0.11.5") {
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-core'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-annotations'
    exclude group: 'org.apache.commons', module: 'commons-lang3'
  }
  compileOnly("org.embulk:embulk-util-json:0.5.0")

  implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
  implementation 'org.apache.commons:commons-text:1.13.0'
  implementation 'com.google.guava:guava:33.4.0-jre'
  implementation 'org.msgpack:msgpack-core:0.9.+'

  testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.0"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.0"
}

embulkPlugin {
  mainClass = "io.github.yuokada.embulk.input.randomj.RandomjInputPlugin"
  category = "input"
  type = "randomj"
}

checkstyle {
  configFile = file("${project.rootDir}/config/checkstyle/checkstyle.xml")
  toolVersion = '6.14.1'
}
checkstyleMain {
  configFile = file("${project.rootDir}/config/checkstyle/default.xml")
  ignoreFailures = false
}
checkstyleTest {
  configFile = file("${project.rootDir}/config/checkstyle/default.xml")
  ignoreFailures = true
}
task checkstyle(type: Checkstyle) {
  classpath = sourceSets.main.output + sourceSets.test.output
  source = sourceSets.main.allJava + sourceSets.test.allJava
}

spotbugs {
  ignoreFailures = true
  excludeFilter = file("spotbugs-exclude.xml")
}

// publishing {
//     publications {
//         embulkPluginMaven(MavenPublication) {  // Publish it with "publishEmbulkPluginMavenPublicationToMavenRepository".
//             from components.java  // Must be "components.java". The dependency modification works only for it.
//         }
//     }
//     repositories {
//         maven {
//             url = "${project.buildDir}/mavenPublishLocal"
//         }
//     }
// }

gem {
  from("LICENSE.txt")
  authors = ["yuokada"]
  email = ["ykhrokada+rubygems@gmail.com"]
  summary = "Randomj input plugin for Embulk"
  homepage = "https://github.com/yuokada/embulk-input-randomj"
  licenses = ["MIT"]
  // metadata = [  // Optional -- if you need metadata in the gem.
  //     "foo": "bar"
  // ]
}

gemPush {
  host = "https://rubygems.org"
}
